'''
Problem: Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.

I used recursion for this. So I will recurse until the lsit is empty then I will add the first element for list of size 1. Then on 
I take the last array in the result and use that as a reference to cacluate the new pascal triangle.

'''

from typing import List
class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        result = []
        self.calculate(numRows, result)
        return result

    def calculate(self, n, result):
        if n == 0:
            return
        self.calculate(n-1, result)
        if len(result) == 0:
            return result.append([1])
        else:
            last_row = result[-1]
            new_row = [1]
            for i in range(1, len(last_row)):
                new_row.append(last_row[i-1]+last_row[i])
            new_row.append(1)
            result.append(new_row)

        
        